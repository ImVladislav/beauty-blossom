import React, { useState } from "react";
import { Container } from "../../shared/styles/Container";
import {
  CheckBox,
  ConditionsList,
  ConditionsTitle,
  FormLavelBloks,
  Input,
  Label,
  ListItems,
  ModalBackground,
  ModalContent,
  ModalForm,
  ModalShopTypeItem,
  ModalShopTypeText,
  ModalText,
  OpenModal,
  ReqStar,
  SubTitle,
  Text,
  Title,
} from "./SaleProgramPageStyled";
import { CloseButton } from "../../shared/components/ReusebleCompoments/ModalCloseBTN/CloseButton";
import Button from "../../shared/components/Button/Button";
import { useDispatch } from "react-redux";
import { register } from "../../redux/auth/operation";

const SaleProgramPage = () => {
  const [isModalOpen, setIsModalOpen] = useState(false);
  const [showPassword, setShowPassword] = useState(false);
  // const [formSubmitted, setFormSubmitted] = useState(false);
  const [userDetails, setUserDetails] = useState({
    email: "",
    password: "",
    firstName: "",
    lastName: "",
    country: "",
    city: "",
    shopTypes: {
      onlineShop: false,
      offlineShop: false,
      socialMedia: false,
    },
    link: "",
  });

  const dispatch = useDispatch();
  
    const registerDispatch = () => {
    dispatch(register({ userDetails }));
  };

  const openModal = () => {
    setIsModalOpen(true);
  };

  const closeModal = () => {
    setIsModalOpen(false);
  };

  const subForm = (e) => {
    e.preventDefault();
    console.log(userDetails);
    registerDispatch();
  };

  const isPasswordValid = (password) => {
    const trimmedPassword = password.trim();
    return trimmedPassword.length >= 6;
  };

  const isEmailValid = (email) => {
    const emailRegex = /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\.[A-Z]{2,}$/i;
    return emailRegex.test(email);
  };

  return (
    <Container>
      <div>
        <section>
          <Title>–ö–æ—Ä–µ–π—Å—å–∫–∞ –∫–æ—Å–º–µ—Ç–∏–∫–∞ –æ–ø—Ç–æ–º –≤ –£–∫—Ä–∞—ó–Ω—ñ</Title>
        </section>

        <section>
          <SubTitle>–ö–æ–º–ø–∞–Ω—ñ—è Beauty Blossom ‚Äì –∑–∞–ø—Ä–æ—à—É—î –¥–æ —Å–ø—ñ–≤–ø—Ä–∞—Ü—ñ</SubTitle>
          <Text>
            –ö–æ–º–ø–∞–Ω—ñ—è Beauty Blossom –∑–∞–ø—Ä–æ—à—É—î –¥–æ —Å–ø—ñ–≤–ø—Ä–∞—Ü—ñ –≤–µ–ª–∏–∫—ñ —Ç–∞ –º–∞–ª—ñ –≥—É—Ä—Ç–æ–≤—ñ
            –º–∞–≥–∞–∑–∏–Ω–∏, —Å–∞–ª–æ–Ω–∏ –∫—Ä–∞—Å–∏ —Ç–∞ —ñ–Ω—Å—Ç–∞–≥—Ä–∞–º —Å—Ç–æ—Ä—ñ–Ω–∫–∏. –ó –Ω–∞–º–∏ –≤–∏ –æ—Ç—Ä–∏–º—É—î—Ç–µ
            –Ω–∞–π–≤–∏–≥—ñ–¥–Ω—ñ—à—ñ —É–º–æ–≤–∏ –¥–ª—è —Å–ø—ñ–≤–ø—Ä–∞—Ü—ñ:
          </Text>
          <ConditionsList>
            <ListItems>–ú—ñ–Ω—ñ–º–∞–ª—å–Ω–∞ —Å—É–º–∞ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è 2500 –≥—Ä–Ω</ListItems>
            <ListItems>–ë–µ–∑–∫–æ—à—Ç–æ–≤–Ω–∞ –¥–æ—Å—Ç–∞–≤–∫–∞ –≤—ñ–¥ 10 —Ç–∏—Å –≥—Ä–Ω</ListItems>
            <ListItems>
              –î–æ—Å—Ç–∞–≤–∫–∞ –ø—Ä–æ—Ç—è–≥–æ–º 1-2 —Ä–æ–±–æ—á–∏—Ö –¥–Ω—ñ–≤ –∑ –º–æ–º–µ–Ω—Ç—É –æ—Ñ–æ—Ä–º–ª–µ–Ω–Ω—è
            </ListItems>
            <ListItems>
              –ì–æ—Ç—ñ–≤–∫–æ–≤–∞ –∞–±–æ –±–µ–∑–≥–æ—Ç—ñ–≤–∫–æ–≤–∞ (–§–û–ü) —Ñ–æ—Ä–º–∞ –æ–ø–ª–∞—Ç–∏. –í—Å–µ –æ—Ñ—ñ—Ü—ñ–π–Ω–æ!
            </ListItems>
            <ListItems>
              –ß–∞—Å—Ç–µ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Ç–æ–≤–∞—Ä—ñ–≤: Daeng Gi Meo Ri, Medi-peel, Lador —Ç–∞ —ñ–Ω—à—ñ
            </ListItems>
          </ConditionsList>
        </section>

        <section>
          <ConditionsTitle>–í—ñ–¥–ø—Ä–∞–≤–∫–∞</ConditionsTitle>
          <Text>
            –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –ù–æ–≤–æ—é –ü–æ—à—Ç–æ—é —â–æ–¥–µ–Ω–Ω–æ (–∫—Ä—ñ–º –Ω–µ–¥—ñ–ª—ñ). –ü—Ä–∏ –æ–ø–ª–∞—Ç—ñ –¥–æ 14:30
            –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –≤—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –≤ –¥–µ–Ω—å –æ–ø–ª–∞—Ç–∏. –ü—Ä–∏ –æ–ø–ª–∞—Ç—ñ –ø—ñ—Å–ª—è 14:30
            –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –≤—ñ–¥–ø—Ä–∞–≤–ª—è—î—Ç—å—Å—è –Ω–∞ –Ω–∞—Å—Ç—É–ø–Ω–∏–π —Ä–æ–±–æ—á–∏–π –¥–µ–Ω—å.
          </Text>
        </section>

        <section>
          <ConditionsTitle>–û–ø–ª–∞—Ç–∞</ConditionsTitle>
          <Text>
            –ù–∞–∫–ª–∞–¥–Ω–∏–π –ø–ª–∞—Ç—ñ–∂ –±–µ–∑ –ø–µ—Ä–µ–¥–æ–ø–ª–∞—Ç–∏ –∞–±–æ –ø–æ–≤–Ω–∞ –æ–ø–ª–∞—Ç–∞ –Ω–∞ –§–û–ü. –ü—Ä–∏
            –ø–æ—Ç—Ä–µ–±—ñ, –Ω–∞–¥–∞—î–º–æ –≤—Å—ñ –ø–æ—Ç—Ä—ñ–±–Ω—ñ –¥–æ–∫—É–º–µ–Ω—Ç–∏ –≤ –¥—Ä—É–∫–æ–≤–∞–Ω–æ–º—É –∞–±–æ
            –µ–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–º—É –≤–∏–≥–ª—è–¥—ñ.
          </Text>
        </section>

        <section>
          <ConditionsTitle>–û–±–º—ñ–Ω —Ç–∞ –ø–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è</ConditionsTitle>
          <Text>
            –ü—Ä–æ—Ç—è–≥–æ–º 14-—Ç–∏ –¥–Ω—ñ–≤ –∑ –º–æ–º–µ–Ω—Ç—É –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –≤–∏ –º–æ–∂–µ—Ç–µ
            –ø–æ–≤–µ—Ä–Ω—É—Ç–∏ –∞–±–æ –æ–±–º—ñ–Ω—è—Ç–∏ —Ç–æ–≤–∞—Ä –Ω–∞ —ñ–Ω—à–∏–π, –ø—Ä–∏ —É–º–æ–≤—ñ —è–∫—â–æ —Ç–æ–≤–∞—Ä –≤
            –Ω–∞–ª–µ–∂–Ω–æ–º—É –≤–∏–≥–ª—è–¥—ñ —Ç–∞ –Ω–µ –±—É–≤ —É –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—ñ. –†–µ–∫–æ–º–µ–Ω–¥—É—î–º–æ –≤–∞–º —É–≤–∞–∂–Ω–æ
            –ø–µ—Ä–µ–≤—ñ—Ä—è—Ç–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –ø–µ—Ä–µ–¥ –æ—Ñ–æ—Ä–º–ª–µ–Ω–Ω—è–º –¥–ª—è –∑–∞–ø–æ–±—ñ–≥–∞–Ω–Ω—è
            –Ω–µ–ø–æ—Ä–æ–∑—É–º—ñ–Ω–Ω—è. –Ø–∫—â–æ –≤–∏ –æ—Ç—Ä–∏–º–∞–ª–∏ —Ç–æ–≤–∞—Ä –≤ –Ω–µ–Ω–∞–ª–µ–∂–Ω–æ–º—É –≤–∏–≥–ª—è–¥—ñ –∞–±–æ –Ω–µ –≤
            –ø–æ–≤–Ω–æ–º—É —Å–∫–ª–∞–¥—ñ ‚Äì –æ–±–æ–≤‚Äô—è–∑–∫–æ–≤–æ –∑–≤‚Äô—è–∂—ñ—Ç—å—Å—è –∑ –Ω–∞—à–∏–º –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º –¥–ª—è
            –Ω–∞–π—à–≤–∏–¥—à–æ–≥–æ –≤–∏—Ä—ñ—à–µ–Ω–Ω—è —Å–∏—Ç—É–∞—Ü—ñ—ó.
          </Text>
        </section>

        <section>
          <ConditionsTitle>–ö–æ–Ω—Ç–∞–∫—Ç–∏</ConditionsTitle>
          <Text>–ó —É—Å—ñ—Ö –ø–∏—Ç–∞–Ω—å –≤–∏ –º–æ–∂–µ—Ç–µ –∑–≤‚Äô—è–∑–∞—Ç–∏—Å—å –∑ –Ω–∞–º–∏:</Text>
          <ConditionsList>
            <ListItems style={{ listStyle: "none" }}>
              –¢–µ–ª–µ—Ñ–æ–Ω: +38 (050) 052 91 00
            </ListItems>
            <ListItems style={{ listStyle: "none" }}>
              –ï–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞ –ø–æ—à—Ç–∞:{" "}
              <a href="mailto:beautyblossom.opt@gmail.com">
                beautyblossom.opt@gmail.com
              </a>
            </ListItems>
          </ConditionsList>
        </section>

        <section>
          <ConditionsTitle>–ì—Ä–∞—Ñ—ñ–∫ —Ä–æ–±–æ—Ç–∏</ConditionsTitle>
          <Text>–ü–æ–Ω–µ–¥—ñ–ª–æ–∫ ‚Äì —Å—É–±–æ—Ç–∞ –∑ 9:30 –ø–æ 18:00</Text>
        </section>

        <section>
          <ConditionsTitle>–ë–∞–∂–∞—î—Ç–µ —Å—Ç–∞—Ç–∏ –æ–ø—Ç–æ–≤–∏–º –ø–æ–∫—É–ø—Ü–µ–º?</ConditionsTitle>
          <Text>
            –©–æ–± —Å—Ç–∞—Ç–∏ –æ–ø—Ç–æ–≤–∏–º –ø–æ–∫—É–ø—Ü–µ–º, –≤–∞–º –ø–æ—Ç—Ä—ñ–±–Ω–æ –≤–∏–∫–æ–Ω–∞—Ç–∏ –Ω–∞—Å—Ç—É–ø–Ω—ñ –∫—Ä–æ–∫–∏:
          </Text>
          <ConditionsList>
            <ListItems> –ó–∞–ø–æ–≤–Ω—ñ—Ç—å –∞–Ω–∫–µ—Ç—É</ListItems>
            <ListItems>
              –ù–∞–¥—ñ—à–ª—ñ—Ç—å –º–µ–Ω–µ–¥–∂–µ—Ä—É –≤ —Ç–µ–ª–µ–≥—Ä–∞–º—ñ —Å–≤–æ—é –µ–ª–µ–∫—Ç—Ä–æ–Ω–Ω—É –ø–æ—à—Ç—É, —è–∫—É
              –≤–∫–∞–∑—É–≤–∞–ª–∏ –ø—Ä–∏ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó
            </ListItems>
            <ListItems>
              {" "}
              –ú–∏ –ø–µ—Ä–µ–≤–µ–¥–µ–º–æ –≤–∞—à –∞–∫–∞—É–Ω—Ç –≤ —Å—Ç–∞—Ç—É—Å –æ–ø—Ç–æ–≤–æ–≥–æ –ø–æ–∫—É–ø—Ü—è
            </ListItems>
          </ConditionsList>
          <Text>
            –ì–æ—Ç–æ–≤–æ! –¢–µ–ø–µ—Ä –≤–∏ –º–æ–∂–µ—Ç–µ –æ—Ñ–æ—Ä–º–ª—è—Ç–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –Ω–∞ —Å–∞–π—Ç—ñ —Ç–∞ –±–∞—á–∏—Ç–∏
            —ñ—Å—Ç–æ—Ä—ñ—é —Å–≤–æ—ó—Ö –ø–æ–∫—É–ø–æ–∫.
          </Text>
          <OpenModal onClick={openModal}>–°—Ç–∞—Ç–∏ –æ–ø—Ç–æ–≤–∏–º –ø–æ–∫—É–ø—Ü–µ–º</OpenModal>
        </section>
      </div>
     {isModalOpen && (
          <ModalBackground>
            <ModalContent>
              <CloseButton close={() => setIsModalOpen(false)} />
              <ModalForm onSubmit={subForm}>
                <FormLavelBloks>
                  <Label>
                    <ModalText>
                      –ü–æ—à—Ç–∞<ReqStar>*</ReqStar>
                    </ModalText>
<Input
  type="text"
  placeholder="–ü–æ—à—Ç–∞"
  className={ userDetails.email.trim() === "" ? "error" : ""}
  onChange={(e) => {
    const email = e.target.value;
    if (isEmailValid(email)) {
      setUserDetails({ ...userDetails, email });
    }
  }}
  required
/>
                  </Label>
                  <Label>
                    <ModalText>
                      –ü–∞—Ä–æ–ª—å<ReqStar>*</ReqStar>
                    </ModalText>
<Input
  type="password" // –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ type="password" –¥–ª—è –ø–∞—Ä–æ–ª—è
  placeholder="–ü–∞—Ä–æ–ª—å"
className={ userDetails.password.trim() === "" ? "error" : ""}
  onChange={(e) => {
    const password = e.target.value;
    if (isPasswordValid(password)) {
      setUserDetails({ ...userDetails, password });
    }
  }}
  required
/>
                    <span
                      onClick={() => setShowPassword(!showPassword)}
                      style={{ cursor: "pointer" }}
                    >
                      {showPassword ? "üôà" : "üëÅÔ∏è"}
                    </span>
                  </Label>
                </FormLavelBloks>
              <FormLavelBloks>
                <Label>
                  <ModalText>
                    –í–∞—à–µ —ñ–º'—è<ReqStar>*</ReqStar>
                  </ModalText>
                  <Input
                    type="text"
                    placeholder="–í–∞—à–µ —ñ–º'—è"
                    value={userDetails.firstName}
                    onChange={(e) =>
                      setUserDetails({
                        ...userDetails,
                        firstName: e.target.value,
                      })
                    }
                    required
                  />
                </Label>
                <Label>
                  <ModalText>
                    –í–∞—à–µ –ø—Ä—ñ–∑–≤–∏—â–µ<ReqStar>*</ReqStar>
                  </ModalText>
                  <Input
                    type="text"
                    placeholder="–í–∞—à–µ –ø—Ä—ñ–∑–≤–∏—â–µ"
                    value={userDetails.lastName}
                    onChange={(e) =>
                      setUserDetails({
                        ...userDetails,
                        lastName: e.target.value,
                      })
                    }
                    required
                  />
                </Label>
              </FormLavelBloks>
              <FormLavelBloks>
                <Label>
                  <ModalText>
                    –ö—Ä–∞—ó–Ω–∞<ReqStar>*</ReqStar>
                  </ModalText>

                  <Input
                    type="text"
                    placeholder="–ö—Ä–∞—ó–Ω–∞"
                    value={userDetails.country}
                    onChange={(e) =>
                      setUserDetails({
                        ...userDetails,
                        country: e.target.value,
                      })
                    }
                    required
                  />
                </Label>
                <Label>
                  <ModalText>
                    –ú—ñ—Å—Ç–æ<ReqStar>*</ReqStar>
                  </ModalText>

                  <Input
                    type="text"
                    placeholder="–ö—Ä–∞—ó–Ω–∞"
                    value={userDetails.city}
                    onChange={(e) =>
                      setUserDetails({
                        ...userDetails,
                        city: e.target.value,
                      })
                    }
                    required
                  />
                </Label>
              </FormLavelBloks>
              <FormLavelBloks>
                <Label>
                  <ModalText>–¢–∏–ø –º–∞–≥–∞–∑–∏–Ω—É</ModalText>

                  <ul>
                    <ModalShopTypeItem>
                      <CheckBox
                        type="checkbox"
                        checked={userDetails.shopTypes.onlineShop} // –û–Ω–æ–≤–ª–µ–Ω–æ
                        onChange={(e) =>
                          setUserDetails({
                            ...userDetails,
                            shopTypes: {
                              ...userDetails.shopTypes,
                              onlineShop: e.target.checked,
                            },
                          })
                        }
                      />
                      <ModalShopTypeText> –û–Ω–ª–∞–π–Ω –º–∞–≥–∞–∑–∏–Ω</ModalShopTypeText>
                    </ModalShopTypeItem>
                    <ModalShopTypeItem>
                      <CheckBox
                        type="checkbox"
                        checked={userDetails.shopTypes.offlineShop} // –û–Ω–æ–≤–ª–µ–Ω–æ
                        onChange={(e) =>
                          setUserDetails({
                            ...userDetails,
                            shopTypes: {
                              ...userDetails.shopTypes,
                              offlineShop: e.target.checked,
                            },
                          })
                        }
                      />
                      <ModalShopTypeText>
                        –û—Ñ–ª–∞–π–Ω —Ç–æ—á–∫–∞ –ø—Ä–æ–¥–∞–∂—É:
                      </ModalShopTypeText>
                    </ModalShopTypeItem>
                    <ModalShopTypeItem>
                      <CheckBox
                        type="checkbox"
                        checked={userDetails.shopTypes.socialMedia} // –û–Ω–æ–≤–ª–µ–Ω–æ
                        onChange={(e) =>
                          setUserDetails({
                            ...userDetails,
                            shopTypes: {
                              ...userDetails.shopTypes,
                              socialMedia: e.target.checked,
                            },
                          })
                        }
                      />
                      <ModalShopTypeText>
                        –°—Ç–æ—Ä—ñ–Ω–∫–∞ —É —Å–æ—Ü–º–µ—Ä–µ–∂–∞—Ö:
                      </ModalShopTypeText>
                    </ModalShopTypeItem>
                  </ul>
                </Label>
                <Label>
                  <ModalText>–ü–æ—Å–∏–ª–∞–Ω–Ω—è:</ModalText>
                  <Input
                    type="text"
                    placeholder="myshop.com"
                    value={userDetails.link}
                    onChange={(e) =>
                      setUserDetails({
                        ...userDetails,
                        link: e.target.value,
                      })
                    }
                  />
                </Label>
              </FormLavelBloks>
              <FormLavelBloks>
                <Button
                  text={"–ó–∞—Ä–µ—î—Å—Ç—Ä—É–≤–∞—Ç–∏—Å—å"}
                  onClick={() => {
                    console.log("–î–∞–Ω—ñ –∑ —Ñ–æ—Ä–º–∏ ModalForm:", userDetails);
                  }}
                />

                <Button text={"–ó–∞–∫—Ä–∏—Ç–∏"} onClick={closeModal} />
              </FormLavelBloks>
            </ModalForm>
          </ModalContent>
        </ModalBackground>
      )}
    </Container>
  );
};

export default SaleProgramPage;
